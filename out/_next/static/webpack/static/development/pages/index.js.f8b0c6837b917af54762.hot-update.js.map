{"version":3,"file":"static/webpack/static/development/pages/index.js.f8b0c6837b917af54762.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import 'isomorphic-fetch'\nimport Link from 'next/link'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\nimport Error from 'next/error'\nimport Movie from '../components/Movie'\nimport Search from '../components/Search'\nimport Spinner from '../components/Spinner'\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      openMovie: null,\n      query:\"\",\n      isLoading:false,\n      results:[]\n    }\n  }\n  static async getInitialProps({ res }){\n    try {\n\n      let req = await fetch('https://api.themoviedb.org/3/discover/movie?api_key=aeb209169cc4a9768d6b47be200b3374&year=2018&language=es')\n      let { results: movies } = await req.json()\n      return { movies, statusCode: 200 }\n    } catch(e){\n      res.statusCoda = 503\n      return { movies:null, statusCode:503 }\n    }\n  }\n\n  openMovieModal = (event, movie) => {\n    event.preventDefault()\n    this.setState({\n      openMovie: movie\n    })\n  }\n\n  closeMovieModal = (event) => {\n    event.preventDefault()\n    this.setState({\n      openMovie: null\n    })\n  }\nhandleSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      isLoading:true,\n    })\n    if (this.state.query) {\n      fetch(`https://api.themoviedb.org/3/search/movie?query=${this.state.query}&api_key=aeb209169cc4a9768d6b47be200b3374&language=es`)\n          .then(response => response.json())\n          .then(data =>this.setState({ results: data.results }));\n    }else{\n      this.setState({\n        results:[]\n      })\n    }\n    this.setState({\n      isLoading:false,\n    })\n}\nsetInputRef = element => {\n    this.input = element;\n}\nhandleInputChange = event => {\n    this.setState({\n        query:event.target.value,\n    })\n}\n  render() {\n    const { movies, statusCode } = this.props\n    const { openMovie, isLoading } = this.state\n\n    if( statusCode !== 200){\n      return <Error statusCode={statusCode} />\n    }\n\n    return <Layout title=\"MovieCatalog\">\n    { openMovie && \n        <Movie movie={ openMovie } onClose= { this.closeMovieModal } />\n      }\n      <Search\n      setRef={this.setInputRef}\n      handleSubmit={this.handleSubmit}\n      handleChange={this.handleInputChange}\n      value={this.state.query}\n      />\n      {isLoading ?\n        <Spinner />\n        : this.state.results.length > 0 ?\n          <ChannelGrid movies={ this.state.results } onClickMovie={ this.openMovieModal }/>\n          :\n          <ChannelGrid movies={ movies } onClickMovie={ this.openMovieModal }/>\n        }\n      } \n      \n    </Layout>\n  }  \n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsBA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA3BA;AA6BA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAlCA;AAmCA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AADA;AAGA;AACA;AApDA;AAqDA;AACA;AACA;AAvDA;AAwDA;AACA;AADA;AAGA;AACA;AA1DA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;AA/EA;;;AAGA;AACA;;AADA;;AACA;AACA;;;AADA;AACA;AAAA;AAAA;AAAA;AACA;;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAnBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}